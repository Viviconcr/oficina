id,code,name,sequence,appears_on_payslip,condition_select,amount_select,amount_python_compute,condition_python,category_id,input_ids/code,input_ids/name
CRPAGUIN,CRPAGUIN,Aguinaldo,320,True,Python Expression,Python Code,result = inputs.CRPAGUIN.amount,result = bool(inputs.CRPAGUIN) and bool(inputs.CRPAGUIN.amount),CR Post Tax Allowances,CRPAGUIN,Aguinaldo
CRAJUSSAL,CRAJUSSAL,Ajuste de salario,127,True,Python Expression,Python Code,result = inputs.CRAJUSSAL.amount,result = bool(inputs.CRAJUSSAL) and bool(inputs.CRAJUSSAL.amount),CR Pre Tax Allowances,CRAJUSSAL,Ajuste de salario
CRSBON01,CRSBON01,Bono Rendimiento,131,True,Python Expression,Python Code,result = inputs.CRSBON01.amount,result = bool(inputs.CRSBON01) and bool(inputs.CRSBON01.amount),CR Pre Tax Allowances,CRSBON01,Bono Rendimiento
CRDEDCCSS,CRDEDCCSS,C.C.S.S.,210,True,Always True,Python Code,result = -(categories.CRGROSS-employee.remaining_leaves)*0.0984,# Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10,CR Post Tax Deductions,,
CRCESANTIA,CRCESANTIA,Cesantía,340,True,Python Expression,Python Code,result = inputs.CRCESANTIA.amount,result = bool(inputs.CRCESANTIA) and bool(inputs.CRCESANTIA.amount),CR Post Tax Allowances,CRCESANTIA,Cesantía
CRDECCOMAT,CRDECCOMAT,Co pago de Maternidad,215,True,Python Expression,Python Code,result = -(inputs.CRPERMMAT.amount * categories.CRBASIC / 60) * 0.0984,result = bool(inputs.CRPERMMAT) and bool(inputs.CRPERMMAT.amount),CR Post Tax Deductions,,
SpAl,SpAl,Créditos por cónyugue,157,False,Python Expression,Python Code,result = (inputs.PREVIOUS_GROSS and 2240) or (2240 / 2),result = ( 0 > categories.CRIRTAX)  and employee.marital=='married',CR IR TAX,,
ChAl,ChAl,Créditos por hijo,156,False,Python Expression,Python Code,result = (inputs.PREVIOUS_GROSS and employee.children * 1500) or (employee.children * 1500 / 2),result = ( 0 > categories.CRIRTAX) and employee.children,CR IR TAX,,
CRDEDASAL01,CRDEDASAL01,Ded Adelantos de Salario,175,True,Python Expression,Python Code,result = -inputs.CRDEDASAL01.amount,result = bool(inputs.CRDEDASAL01) and bool(inputs.CRDEDASAL01.amount),CR Post Tax Deductions,CRDEDASAL01,Ded Adelantos de Salario
CRDEDCEMPL,CRDEDCEMPL,Ded Compras Empleado,175,True,Python Expression,Python Code,result = -inputs.CRDEDCEMPL.amount,result = bool(inputs.CRDEDCEMPL) and bool(inputs.CRDEDCEMPL.amount),CR Post Tax Deductions,CRDEDCEMPL,Ded Compras Empleado
CREMBARGO,CREMBARGO,Embargos,196,True,Python Expression,Python Code,result = -inputs.CREMBARGO.amount,result = bool(inputs.CREMBARGO) and bool(inputs.CREMBARGO.amount),CR Post Tax Deductions,CREMBARGO,Embargos
CRFERIADO,CRFERIADO,Feriado,113,True,Python Expression,Python Code,result = inputs.CRFERIADO.amount * categories.CRBASIC / 30,result = bool(inputs.CRFERIADO) and bool(inputs.CRFERIADO.amount),CR Pre Tax Allowances,CRFERIADO,Feriado
CRHORAEXTRA,CRHORAEXTRA,Horas Extra,115,True,Python Expression,Python Code,result = inputs.CRHORAEXTRA.amount * categories.CRBASIC * 1.5 / (30*8),result = bool(inputs.CRHORAEXTRA) and bool(inputs.CRHORAEXTRA.amount),CR Pre Tax Allowances,CRHORAEXTRA,Horas Extra
CRHORAEXTRAFER,CRHORAEXTRAFER,Horas extra en día feriado,116,True,Python Expression,Python Code,result = inputs.CRHORAEXTRAFER.amount * categories.CRBASIC * 1.5 * 2 / (8*30),result = bool(inputs.CRHORAEXTRAFER) and bool(inputs.CRHORAEXTRAFER.amount),CR Pre Tax Allowances,CRHORAEXTRAFER,Horas extra en día feriado
CRDEDIMPSAL,CRDEDIMPSAL,Impuesto al Salario,180,True,Python Expression,Python Code,result = categories.CRIRTAX  - (inputs.PREVIOUS_TAX and inputs.PREVIOUS_TAX.amount),#result = ( 0 > categories.CRIRTAX) result = ( 0 > categories.CRIRTAX) or (inputs.PREVIOUS_TAX and inputs.PREVIOUS_TAX.amount),CR Post Tax Deductions,,
IR1,IR,Impuesto Salario Primera Quincena,155,False,Python Expression,Fixed Amount,# Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days. # inputs: object containing the computed inputs.  # Note: returned value have to be set in the variable 'result'  result = contract.wage * 0.10,result = not inputs.PREVIOUS_GROSS and (categories.CRGROSS+categories.CRBASIC/2-employee.remaining_leaves*2>799000),CR IR TAX,,
IR2,IR,Impuesto Salario Segunda Quincena,155,False,Python Expression,Fixed Amount,# Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days. # inputs: object containing the computed inputs.  # Note: returned value have to be set in the variable 'result'  result = contract.wage * 0.10,result = bool(inputs.PREVIOUS_GROSS) and (categories.CRGROSS+ inputs.PREVIOUS_GROSS.amount-employee.remaining_leaves*2>799000)  #result = bool(inputs.CRHORAEXTRA) and bool(inputs.CRHORAEXTRA.amount),CR IR TAX,,
CRINCAPEXT,CRINCAPEXT,Incapacidad CCSS Extendida,112,True,Python Expression,Python Code,result = inputs.CRINCAPEXT.amount * categories.CRBASIC *0.4 / 30,result = bool(inputs.CRINCAPEXT) and bool(inputs.CRINCAPEXT.amount),CR Pre Tax Allowances,CRINCAPEXT,Incapacidad CCSS Extendida
CRPERMMAT,CRPERMMAT,Incapacidad por Maternidad,118,True,Python Expression,Python Code,result = inputs.CRPERMMAT.amount * categories.CRBASIC / 60,result = bool(inputs.CRPERMMAT) and bool(inputs.CRPERMMAT.amount),CR Pre Tax Allowances,CRPERMMAT,Incapacidad por Maternidad
CRDEDPENALI,CRDEDPENALI,Pensión Alimenticia,195,True,Python Expression,Python Code,result = -inputs.CRDEDPENALI.amount,result = bool(inputs.CRDEDPENALI) and bool(inputs.CRDEDPENALI.amount),CR Post Tax Deductions,CRDEDPENALI,Pensión Alimenticia
CRPERMENFERMEDAD,CRPERMENFERMEDAD,Permiso por enfermedad,117,True,Python Expression,Python Code,result = inputs.CRPERMENFERMEDAD.amount * categories.CRBASIC / 60,result = bool(inputs.CRPERMENFERMEDAD) and bool(inputs.CRPERMENFERMEDAD.amount),CR Pre Tax Allowances,CRPERMENFERMEDAD,Permiso por enfermedad
CRPERMSINGOCE,CRPERMSINGOCE,Permiso sin goce de salario,105,True,Python Expression,Python Code,result = - inputs.CRPERMSINGOCE.amount * 8 * categories.CRBASIC / (30*8),result = bool(inputs.CRPERMSINGOCE) and bool(inputs.CRPERMSINGOCE.amount),CR Pre Tax Deductions,CRPERMSINGOCE,Permiso sin goce de salario
CRPINS,CRPINS,Póliza Riesgos del Trabajo INS,500,True,Always True,Python Code,result = categories.CRGROSS*0.0302,# Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10,Company Contribution,,
CRPREAVISO,CRPREAVISO,Preaviso,330,True,Python Expression,Python Code,result = inputs.CRPREAVISO.amount,result = bool(inputs.CRPREAVISO) and bool(inputs.CRPREAVISO.amount),CR Post Tax Allowances,CRPREAVISO,Preaviso
CRSALMEN,CRSALMEN,Salario Base,100,True,Python Expression,Python Code,result = contract.wage/12,result = not inputs.XXESB01,CR Basic,,
NET_PAYMENT,NET_PAYMENT,Salario Neto,220,True,Always True,Python Code,result = categories.CRGROSS + categories.CRPOSALW + categories.CRPOSDED,# Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10,Net Salary,,
CRSALORD,CRSALORD,Salario Ordinario,125,True,Always True,Python Code,result = ((120)-(inputs.CRPERMENFERMEDAD and inputs.CRPERMENFERMEDAD.amount*8)-(inputs.CRVACACIONES and inputs.CRVACACIONES.amount*8)-(inputs.CRINCAPEXT and inputs.CRINCAPEXT.amount*8) -(inputs.CRPERMMAT and inputs.CRPERMMAT.amount*8)) * categories.CRBASIC / (8*30),�,CR Pre Tax Allowances,,
TERMDAYAVGr,TERMDAYAVG,Termination Day Avg,300,True,Python Expression,Python Code,result = payslip.avg_day_salary(),result = False and bool(contract.date_end),Termination Avg Day Salary,,
CRGROSSr,CRGROSS,Total Bruto,150,True,Always True,Python Code,result = categories.CRPREDED + categories.CRPREALW,�,Total Gross,CRGROSS,Total Bruto
CRDEDCEMPL,CRDEDCEMPL,Travel Award-Referral-Deduction,190,True,Python Expression,Python Code,result = -inputs.CRI_1_G_TrvlRefGrant.amount,result = bool(inputs.CRI_1_G_TrvlRefGrant) and bool(inputs.CRI_1_G_TrvlRefGrant.amount),CR Post Tax Deductions,,
CRVACACIONES,CRVACACIONES,Vacaciones,120,True,Python Expression,Python Code,result = inputs.CRVACACIONES.amount * categories.CRBASIC / 30,result = bool(inputs.CRVACACIONES) and bool(inputs.CRVACACIONES.amount),CR Pre Tax Allowances,CRVACACIONES,Vacaciones
CRVACACIONESLIQ,CRVACACIONESLIQ,Vacaciones-Liquidación,310,True,Python Expression,Python Code,result = inputs.CRVACACIONESLIQ.amount,result = bool(inputs.CRVACACIONESLIQ) and bool(inputs.CRVACACIONESLIQ.amount),CR Post Tax Allowances,CRVACACIONESLIQ,Vacaciones-Liquidación
